{"ast":null,"code":"import axios from \"../helpers/axios\";\nimport { authConstants } from \"./constants\"; // export const userSignup = (user) => {\n//   console.log(user);\n//   return async (dispatch) => {\n//     dispatch({ type: userContants.USER_REGISTER_REQUEST });\n//     const res = await axiosIntance.post(`/signup`, {\n//       ...user\n//     });\n//     if (res.status === 201) {\n//       const { message } = res.data;\n//       dispatch({\n//         type: userContants.USER_REGISTER_SUCCESS,\n//         payload: {\n//          message\n//         }\n//       });\n//     } else {\n//       if (res.status === 400) {\n//         dispatch({\n//           type: userContants.USER_REGISTER_FAILURE,\n//           payload: { error: res.data.error }\n//         });\n//       }\n//     }\n//   };\n// };\n// export const userSignup = (user) => {\n//   return async (dispatch) => {\n//     let res;\n//     try {\n//       dispatch({ type: authConstants.SIGNUP_REQUEST });\n//       res = await axios.post(`/signup`, user);\n//       if (res.status === 201) {\n//         dispatch({ type: authConstants.SIGNUP_SUCCESS });\n//         const { token, user } = res.data;\n//         localStorage.setItem(\"token\", token);\n//         localStorage.setItem(\"user\", JSON.stringify(user));\n//         dispatch({\n//           type: authConstants.LOGIN_SUCCESS,\n//           payload: {\n//             token,\n//             user,\n//           },\n//         });\n//       } else {\n//         const { error } = res.data;\n//         dispatch({ type: authConstants.SIGNUP_FAILURE, payload: { error } });\n//       }\n//     } catch (error) {\n//       // const { data } = error.response;\n//       dispatch({\n//         type: authConstants.SIGNUP_FAILURE,\n//         payload: { error },\n//       });\n//     }\n//   };\n// };","map":{"version":3,"sources":["C:/Users/abc/Desktop/SHOPISTHAN_PVT_LTD/Development/shopisthan-frontend/src/actions/user.action.js"],"names":["axios","authConstants"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,aAAT,QAA8B,aAA9B,C,CAGA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"../helpers/axios\";\r\nimport { authConstants } from \"./constants\";\r\n\r\n\r\n// export const userSignup = (user) => {\r\n\r\n//   console.log(user);\r\n\r\n\r\n//   return async (dispatch) => {\r\n//     dispatch({ type: userContants.USER_REGISTER_REQUEST });\r\n//     const res = await axiosIntance.post(`/signup`, {\r\n//       ...user\r\n//     });\r\n\r\n//     if (res.status === 201) {\r\n//       const { message } = res.data;\r\n      \r\n//       dispatch({\r\n//         type: userContants.USER_REGISTER_SUCCESS,\r\n//         payload: {\r\n//          message\r\n//         }\r\n//       });\r\n//     } else {\r\n//       if (res.status === 400) {\r\n//         dispatch({\r\n//           type: userContants.USER_REGISTER_FAILURE,\r\n//           payload: { error: res.data.error }\r\n//         });\r\n//       }\r\n//     }\r\n//   };\r\n// };\r\n\r\n\r\n// export const userSignup = (user) => {\r\n//   return async (dispatch) => {\r\n//     let res;\r\n//     try {\r\n//       dispatch({ type: authConstants.SIGNUP_REQUEST });\r\n//       res = await axios.post(`/signup`, user);\r\n//       if (res.status === 201) {\r\n//         dispatch({ type: authConstants.SIGNUP_SUCCESS });\r\n//         const { token, user } = res.data;\r\n//         localStorage.setItem(\"token\", token);\r\n//         localStorage.setItem(\"user\", JSON.stringify(user));\r\n//         dispatch({\r\n//           type: authConstants.LOGIN_SUCCESS,\r\n//           payload: {\r\n//             token,\r\n//             user,\r\n//           },\r\n//         });\r\n//       } else {\r\n//         const { error } = res.data;\r\n//         dispatch({ type: authConstants.SIGNUP_FAILURE, payload: { error } });\r\n//       }\r\n//     } catch (error) {\r\n//       // const { data } = error.response;\r\n//       dispatch({\r\n//         type: authConstants.SIGNUP_FAILURE,\r\n//         payload: { error },\r\n//       });\r\n//     }\r\n//   };\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}